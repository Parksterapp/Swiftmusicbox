import UIKit

class ProfileViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {

    // MARK: - UI Components
    
    let subscribedArtistsLabel: UILabel = {
        let label = UILabel()
        label.text = "Subscribed Artists"
        label.font = UIFont.systemFont(ofSize: 24, weight: .bold)
        return label
    }()
    
    let artistsTableView: UITableView = {
        let tableView = UITableView()
        tableView.backgroundColor = .white
        tableView.separatorStyle = .none
        return tableView
    }()

    // Sample data for subscribed artists (replace with your actual data)
    var subscribedArtists: [Artist] = [
        Artist(name: "John Doe", genre: "Pop", profileImage: "john_doe"),
        Artist(name: "Jane Smith", genre: "Rock", profileImage: "jane_smith"),
        // Add more artists as needed
    ]

    // MARK: - Lifecycle Methods
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureUI()
    }

    // MARK: - Private Methods
    
    private func configureUI() {
        view.backgroundColor = .white

        view.addSubview(subscribedArtistsLabel)
        view.addSubview(artistsTableView)

        // Set up constraints (adjust as needed for your layout)
        subscribedArtistsLabel.translatesAutoresizingMaskIntoConstraints = false
        artistsTableView.translatesAutoresizingMaskIntoConstraints = false

        NSLayoutConstraint.activate([
            subscribedArtistsLabel.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 20),
            subscribedArtistsLabel.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            
            artistsTableView.topAnchor.constraint(equalTo: subscribedArtistsLabel.bottomAnchor, constant: 10),
            artistsTableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            artistsTableView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            artistsTableView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
        ])

        artistsTableView.dataSource = self
        artistsTableView.delegate = self

        // Register custom cell
        artistsTableView.register(ArtistTableViewCell.self, forCellReuseIdentifier: "ArtistCell")
    }

    // MARK: - UITableViewDataSource Methods

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return subscribedArtists.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: "ArtistCell", for: indexPath) as? ArtistTableViewCell else {
            return UITableViewCell()
        }

        let artist = subscribedArtists[indexPath.row]
        cell.configure(with: artist)

        return cell
    }

    // MARK: - UITableViewDelegate Methods

    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 120
    }
}
